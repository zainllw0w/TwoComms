from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)

def main_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='‚öôÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚öôÔ∏è')],
            [KeyboardButton(text='üì¶ –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
             KeyboardButton(text='üî• –ú–æ—ó –∞–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏')],
            [KeyboardButton(text='üí¨ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞'),
             KeyboardButton(text='üñºÔ∏è –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –ø—Ä–∏–Ω—Ç')],
            [KeyboardButton(text='ü§ù –°–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏—Ü—Ç–≤–æ')]
        ],
        resize_keyboard=True
    )
    return keyboard

def admin_main_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='‚öôÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚öôÔ∏è')],
            [KeyboardButton(text='üìã –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è')],
            [KeyboardButton(text='üì¶ –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
             KeyboardButton(text='üî• –ú–æ—ó –∞–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏')],
            [KeyboardButton(text='üí¨ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞'),
             KeyboardButton(text='üñºÔ∏è –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –ø—Ä–∏–Ω—Ç')],
            [KeyboardButton(text='ü§ù –°–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏—Ü—Ç–≤–æ')]
        ],
        resize_keyboard=True
    )
    return keyboard

def support_response_options():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='‚úÖ –ü–∏—Ç–∞–Ω–Ω—è –≤–∏—Ä—ñ—à–µ–Ω–æ', callback_data='support_resolved'),
            InlineKeyboardButton(text='üîÑ –ó–∞–¥–∞—Ç–∏ —â–µ –ø–∏—Ç–∞–Ω–Ω—è', callback_data='support_more_question')
        ]
    ])
    return keyboard

def category_selection_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='üëï –§—É—Ç–±–æ–ª–∫–∏'),
             KeyboardButton(text='ü•∑üèº –•—É–¥—ñ (–Ω–∞—Ä–∞–∑—ñ –Ω–µ –º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ)')],
            [KeyboardButton(text='üîô –ù–∞ –≥–æ–ª–æ–≤–Ω—É')]
        ],
        resize_keyboard=True
    )
    return keyboard

def size_selection_menu():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='S', callback_data='size_S'),
            InlineKeyboardButton(text='M', callback_data='size_M'),
            InlineKeyboardButton(text='L', callback_data='size_L')
        ],
        [
            InlineKeyboardButton(text='XL', callback_data='size_XL'),
            InlineKeyboardButton(text='XXL', callback_data='size_XXL')
        ],
        [
            InlineKeyboardButton(text='üìè –†–æ–∑–º—ñ—Ä–Ω–∞ —Å—ñ—Ç–∫–∞', callback_data='size_chart')
        ]
    ])
    return keyboard

def back_to_main_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='üîô –ù–∞ –≥–æ–ª–æ–≤–Ω—É')]],
        resize_keyboard=True
    )
    return keyboard

def no_orders_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='üõ†Ô∏è –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ')],
            [KeyboardButton(text='üîô –ù–∞ –≥–æ–ª–æ–≤–Ω—É')]
        ],
        resize_keyboard=True
    )
    return keyboard

def info_support_buttons():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='üìû –ó–≤\'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é')],
            [KeyboardButton(text='‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±—Ä–µ–Ω–¥')],
            [KeyboardButton(text='üîô –ù–∞ –≥–æ–ª–æ–≤–Ω—É')]
        ],
        resize_keyboard=True
    )
    return keyboard

def payment_options():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='üí∞ –ü–ª–∞—Ç–∞ –Ω–∞ –ø–æ—à—Ç—ñ', callback_data='payment_post'),
            InlineKeyboardButton(text='üí≥ –û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É', callback_data='payment_card')
        ],
        [
            InlineKeyboardButton(text='‚ùì –Ø–∫ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –¥–æ—Å—Ç–∞–≤–∫–∞?', callback_data='how_delivery')
        ]
    ])
    return keyboard

def paid_button():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚úÖ –û–ø–ª–∞—á–µ–Ω–æ', callback_data='paid_confirmed')]
    ])
    return keyboard

def approval_buttons(discount_type, user_id):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏', callback_data=f'approve_{discount_type}_{user_id}'),
            InlineKeyboardButton(text='‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏', callback_data=f'reject_{discount_type}_{user_id}')
        ]
    ])
    return keyboard

def payment_approval_buttons(user_id, order_id):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ–ø–ª–∞—Ç—É', callback_data=f'approve_payment_{user_id}_{order_id}'),
            InlineKeyboardButton(text='‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏ –æ–ø–ª–∞—Ç—É', callback_data=f'reject_payment_{user_id}_{order_id}')
        ]
    ])
    return keyboard

def admin_order_actions(order_id, statuses):
    buttons = []

    ready_text = 'üõ†Ô∏è –ì–æ—Ç–æ–≤–æ –¥–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ ‚úÖ' if statuses.get('ready', False) else 'üõ†Ô∏è –ì–æ—Ç–æ–≤–æ –¥–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏'
    buttons.append([InlineKeyboardButton(text=ready_text, callback_data=f'order_ready_{order_id}')])

    # –ö–ù–û–ü–ö–ê "–°—Ç–≤–æ—Ä–∏—Ç–∏ –¢–¢–ù"
    buttons.append([InlineKeyboardButton(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –¢–¢–ù', callback_data=f'order_create_ttn_{order_id}')])

    sent_text = 'üì¶ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ' if statuses.get('sent', False) else 'üì¶ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ'
    buttons.append([InlineKeyboardButton(text=sent_text, callback_data=f'order_sent_{order_id}')])

    delivered_text = '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ ‚úÖ' if statuses.get('delivered', False) else '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ'
    buttons.append([InlineKeyboardButton(text=delivered_text, callback_data=f'order_delivered_{order_id}')])

    buttons.append([InlineKeyboardButton(text='‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', callback_data=f'order_cancel_{order_id}')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

    # Sent
    if statuses.get('sent', False):
        sent_text = 'üì¶ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ'
    else:
        sent_text = 'üì¶ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ'
    buttons.append([
        InlineKeyboardButton(text=sent_text,
                             callback_data=f'order_sent_{order_id}')
    ])
    # Delivered
    if statuses.get('delivered', False):
        delivered_text = '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ ‚úÖ'
    else:
        delivered_text = '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ'
    buttons.append([
        InlineKeyboardButton(text=delivered_text,
                             callback_data=f'order_delivered_{order_id}')
    ])
    # Reject order
    buttons.append([
        InlineKeyboardButton(text='‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                             callback_data=f'order_cancel_{order_id}')
    ])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def admin_orders_menu():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='üìÇ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –æ–±—Ä–æ–±—Ü—ñ')],
            [KeyboardButton(text='üìÇ –í–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')],
            [KeyboardButton(text='üîô –ù–∞ –≥–æ–ª–æ–≤–Ω—É')]
        ],
        resize_keyboard=True
    )
    return keyboard


def order_details_button(order_id):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text='üìÑ –î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                callback_data=f'order_details_{order_id}'
            )
        ]
    ])
    return keyboard


def admin_support_reply_button(issue_id):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚úâÔ∏è –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏',
                              callback_data=f'support_reply_{issue_id}')]
    ])
    return keyboard


def product_display_keyboard(
        current_index,
        total_products,
        current_color_index,
        total_colors,
        category,
        selected_options
):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    # ----- 1) –†—è–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–æ–¥–µ–ª—è–º
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='prev_product'),
        InlineKeyboardButton(
            text=f"–ú–æ–¥–µ–ª—å {current_index + 1} –∑ {total_products}",
            callback_data='noop'
        ),
        InlineKeyboardButton(text='–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è', callback_data='next_product')
    ])

    # ----- 2) –†—è–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ü–≤–µ—Ç–∞–º (–µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ 1)
    if total_colors > 1:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text='‚¨ÖÔ∏è –ö–æ–ª—ñ—Ä', callback_data='prev_color'),
            InlineKeyboardButton(
                text=f"–ö–æ–ª—ñ—Ä {current_color_index + 1} –∑ {total_colors}",
                callback_data='noop'
            ),
            InlineKeyboardButton(text='–ö–æ–ª—ñ—Ä ‚û°Ô∏è', callback_data='next_color')
        ])

    # ----- 3) –†—è–¥—ã –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π
    if category == 't_shirts':
        options = [
            ('made_in_ukraine', '–ü—Ä–∏–Ω—Ç –±—ñ–ª—è —à–∏—ó "Made in Ukraine"'),
            ('back_text', '–ó–∞–¥–Ω—ñ–π —Ç–µ–∫—Å—Ç –∑ –ª–æ–≥–æ"'),
            ('back_print', '–í–µ–ª–∏–∫–∏–π –ø—Ä–∏–Ω—Ç –Ω–∞ —Å–ø–∏–Ω—É')
        ]
    elif category == 'hoodies':
        options = [
            ('collar', '–ì–æ—Ä–ª–æ–≤–∏–Ω–∞'),
            ('sleeve_text', '–ù–∞–¥–ø–∏—Å–∏ –Ω–∞ —Ä—É–∫–∞–≤–∞—Ö'),
            ('back_print', '–ó–∞–¥–Ω—ñ–π –ø—Ä–∏–Ω—Ç')
        ]
    else:
        options = []

    for option_key, option_text in options:
        # –ï—Å–ª–∏ –æ–ø—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ -> ‚úÖ, –∏–Ω–∞—á–µ -> ‚ùå
        if selected_options.get(option_key, False):
            btn_text = f"{option_text}- ‚úÖ"
        else:
            btn_text = f"{option_text}- ‚ùå"
        callback_data = f"option_{option_key}"
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text=btn_text, callback_data=callback_data)
        ])

    # ----- 4) –ö–Ω–æ–ø–∫–∞ "–í–∏–±—Ä–∞—Ç–∏"
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text='‚úîÔ∏è–í–∏–±—Ä–∞—Ç–∏‚úîÔ∏è', callback_data='select_product')
    ])

    return keyboard


def support_options():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='‚úÖ –ü–∏—Ç–∞–Ω–Ω—è –≤–∏—Ä—ñ—à–µ–Ω–æ',
                                 callback_data='support_resolved'),
            InlineKeyboardButton(text='üîÑ –ó–∞–¥–∞—Ç–∏ —â–µ –ø–∏—Ç–∞–Ω–Ω—è',
                                 callback_data='support_more_question')
        ]
    ])
    return keyboard


def options_selection_keyboard(category, selected_options):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    :param category: 't_shirts' –∏–ª–∏ 'hoodies'
    :param selected_options: dict —Å —Ç–µ–∫—É—â–∏–º–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
    :return: InlineKeyboardMarkup
    """
    options = []

    if category == 't_shirts':
        options = [
            ('made_in_ukraine', '–ü—Ä–∏–Ω—Ç –±—ñ–ª—è —à–∏—ó "Made in Ukraine" (–Ω–∞ –≤–∏–±—ñ—Ä)'),
            ('back_text', '–ó–∞–¥–Ω—ñ–π —Ç–µ–∫—Å—Ç: "–°–≤—ñ—Ç –ª–æ–≤–∏–≤ –º–µ–Ω–µ —Ç–∞ –Ω–µ—Å–ø—ñ–π–º–∞–≤" (–Ω–∞ –≤–∏–±—ñ—Ä)"'),
            ('back_print', '–í–µ–ª–∏–∫–∏–π –ø—Ä–∏–Ω—Ç –Ω–∞ —Å–ø–∏–Ω—É (–Ω–∞ –≤–∏–±—ñ—Ä)')
        ]
    elif category == 'hoodies':
        options = [
            ('collar', '–ì–æ—Ä–ª–æ–≤–∏–Ω–∞'),
            ('sleeve_text', '–ù–∞–¥–ø–∏—Å–∏ –Ω–∞ —Ä—É–∫–∞–≤–∞—Ö'),
            ('back_print', '–ó–∞–¥–Ω—ñ–π –ø—Ä–∏–Ω—Ç')
        ]

    buttons = []

    for option_key, option_text in options:
        if selected_options.get(option_key, False):
            text = f"‚úÖ {option_text}"
        else:
            text = f"‚ùå {option_text}"
        callback_data = f'option_{option_key}'
        buttons.append([InlineKeyboardButton(text=text, callback_data=callback_data)])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "‚û°Ô∏è –î–∞–ª—ñ"
    buttons.append([InlineKeyboardButton(text='‚û°Ô∏è –î–∞–ª—ñ', callback_data='options_next')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard
